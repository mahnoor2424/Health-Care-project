@model IEnumerable<Appointment>

@{
    ViewData["Title"] = "My Appointments";
    Layout = "_DoctorLayout";
    ViewBag.IsDoctor = true;
   
    var ModelPrescriptions = ViewBag.Prescriptions as List<PrescriptionModel> ?? new List<PrescriptionModel>();

}

<div class="container">
    <div class="card" style="margin-top:70px;">
        <div class="card-header bg-primary text-white">
            <h3>My Appointments</h3>
        </div>
        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }
            <div id="dynamicAlerts"></div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Patient</th>
                        <th>Date/Time</th>
                        <th>Problem</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-id="@item.Id">
                            <td>@item.Patient?.FullName</td>
                            <td class="appointment-date">@item.AppointmentDateTime.ToString("g")</td>
                            <td class="problem-description">@item.ProblemDescription?.Truncate(30)</td>
                            <td>
                                <span class="badge status-badge @GetStatusClass(item.Status)">@item.Status</span>
                            </td>
                            <td>
                                <div class="btn-group">
                                    <button class="btn btn-sm btn-info view-appointment-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#viewAppointmentModal"
                                            data-patient="@item.Patient?.FullName"
                                            data-date="@item.AppointmentDateTime.ToString("f")"
                                            data-description="@item.ProblemDescription"
                                            data-status="@item.Status">
                                        <i class="fas fa-eye"></i>
                                    </button>

                                    @if (item.Status == "Pending")
                                    {
                                        <form asp-action="UpdateStatus" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@item.Id" />
                                            <input type="hidden" name="status" value="Approved" />
                                            <button type="submit" class="btn btn-sm btn-success">
                                                <i class="fas fa-check"></i> Approve
                                            </button>
                                        </form>
                                        <form asp-action="UpdateStatus" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@item.Id" />
                                            <input type="hidden" name="status" value="Cancelled" />
                                            <button type="submit" class="btn btn-sm btn-danger">
                                                <i class="fas fa-times"></i> Cancel
                                            </button>
                                        </form>
                                    }
                                    <button class="btn btn-sm btn-warning edit-appointment-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editAppointmentModal"
                                            data-id="@item.Id"
                                            data-date="@item.AppointmentDateTime.ToString("yyyy-MM-ddTHH:mm")"
                                            data-description="@item.ProblemDescription"
                                            data-status="@item.Status">
                                        <i class="fas fa-edit"></i> Edit
                                    </button>
                                    @if (item.Status != "Completed")
                                    {
                                        <form asp-action="Delete" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@item.Id" />
                                            <button type="submit" class="btn btn-sm btn-danger"
                                                    onclick="return confirm('Are you sure you want to delete this appointment?')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    }
                                </div>
                                @if (item.Status == "Approved" || item.Status == "Completed")
                                {
                                    var pres = ModelPrescriptions.FirstOrDefault(p => p.AppointmentId == item.Id);

                                    if (pres != null)
                                    {
                                        <a href="/Prescription/ViewPrescription?appointmentId=@item.Id"
                                           class="btn btn-sm btn-info">
                                            <i class="fas fa-file-medical"></i> View Prescription
                                        </a>
                                    }
                                    else
                                    {
                                        <button type="button"
                                                class="btn btn-sm btn-success write-prescription-btn"
                                                data-bs-toggle="modal"
                                                data-bs-target="#writePrescriptionModal"
                                                data-appointmentid="@item.Id">
                                            <i class="fas fa-file-medical"></i> Write Prescription
                                        </button>

                                    }
                                }



                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="modal fade" id="writePrescriptionModal" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <form id="prescriptionForm" method="post" asp-action="Create" asp-controller="Prescription">
                            @Html.AntiForgeryToken()
                            @if (TempData["SuccessMessage"] != null)
                            {
                                <div class="alert alert-success">
                                    @TempData["SuccessMessage"]
                                </div>
                            }
                            @if (TempData["ErrorMessage"] != null)
                            {
                                <div class="alert alert-danger">
                                    @TempData["ErrorMessage"]
                                </div>
                            }

                            <div class="modal-header bg-primary text-white">
                                <h5 class="modal-title">Write Prescription</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <!-- Hidden field for AppointmentId -->
                                <input type="hidden" id="AppointmentId" name="AppointmentId" />

                                <div class="mb-3">
                                    <label>Symptoms</label>
                                    <textarea name="Symptoms" class="form-control" required></textarea>
                                </div>
                                <div class="mb-3">
                                    <label>Diagnosis</label>
                                    <textarea name="Diagnosis" class="form-control" required></textarea>
                                </div>
                                <div class="mb-3">
                                    <label>Medicines</label>
                                    <textarea name="Medicines" class="form-control" required></textarea>
                                </div>
                                <div class="mb-3">
                                    <label>Notes</label>
                                    <textarea name="Notes" class="form-control"></textarea>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary">Submit Prescription</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>
<script>
    $('#prescriptionForm').on('submit', function (e) {
        e.preventDefault();

        $.ajax({
            url: $(this).attr('action'),
            type: 'POST',
            data: $(this).serialize(),
            success: function (res) {
                if (res.success) {
                    const row = $(`tr[data-id="${res.appointmentId}"]`);
                    row.find('.write-prescription-btn').replaceWith(`
                        <a href="/Prescription/ViewPrescription?appointmentId=${res.appointmentId}"
                           class="btn btn-sm btn-info">
                            <i class="fas fa-file-medical"></i> View Prescription
                        </a>
                    `);
                    $('#writePrescriptionModal').modal('hide');
                    showAlert('Prescription submitted!', 'success');
                } else {
                    showAlert(res.message || 'Error submitting prescription', 'danger');
                }
            },
            error: function () {
                showAlert('Server error while submitting prescription', 'danger');
            }
        });
    });

</script>
<!-- Modal HTML -->
<div class="modal fade" id="viewAppointmentModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Appointment Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p><strong>Patient:</strong> <span id="modalPatient"></span></p>
                <p><strong>Date & Time:</strong> <span id="modalDate"></span></p>
                <p><strong>Problem Description:</strong> <span id="modalDescription"></span></p>
                <p><strong>Status:</strong> <span id="modalStatus"></span></p>
            </div>
        </div>
    </div>
</div>

<!-- Edit Appointment Modal -->
<div class="modal fade" id="editAppointmentModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Edit Appointment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editAppointmentForm" asp-action="Edit" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" id="editAppointmentId" name="Id" />

                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Date & Time</label>
                        <input type="datetime-local" class="form-control" id="editAppointmentDate"
                               name="AppointmentDateTime" required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Problem Description</label>
                        <textarea class="form-control" id="editAppointmentDescription"
                                  name="ProblemDescription" rows="3" required></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select class="form-control" id="editAppointmentStatus" name="Status">
                            <option value="Pending">Pending</option>
                            <option value="Approved">Approved</option>
                            <option value="Cancelled">Cancelled</option>
                            <option value="Completed">Completed</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="saveChangesBtn">
                        <span class="submit-text">Save Changes</span>
                        <span class="spinner-border spinner-border-sm d-none" role="status"></span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {

            // Set min date/time for edit appointment input
            var now = new Date();
            now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
            document.getElementById('editAppointmentDate').min = now.toISOString().slice(0, 16);

            // When edit modal opens, populate fields from button data attributes
            $('#editAppointmentModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var modal = $(this);

                modal.find('#editAppointmentId').val(button.data('id'));
                modal.find('#editAppointmentDate').val(button.data('date'));
                modal.find('#editAppointmentDescription').val(button.data('description'));
                modal.find('#editAppointmentStatus').val(button.data('status'));
            });

            // AJAX submit for edit appointment form
            $('#editAppointmentForm').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                var submitBtn = form.find('#saveChangesBtn');
                var submitText = submitBtn.find('.submit-text');
                var spinner = submitBtn.find('.spinner-border');

                submitText.text('Saving...');
                spinner.removeClass('d-none');
                submitBtn.prop('disabled', true);

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            var row = $(`tr[data-id="${response.id}"]`);

                            row.find('.appointment-date').text(response.dateTime);
                            row.find('.problem-description').text(response.description);

                            var statusBadge = row.find('.status-badge');
                            statusBadge.text(response.status)
                                .removeClass('bg-warning bg-success bg-primary bg-danger bg-secondary')
                                .addClass(response.statusClass);

                            $('#editAppointmentModal').modal('hide');

                            showAlert('Appointment updated successfully!', 'success');
                        } else {
                            var errorMsg = response.message;
                            if (response.errors) {
                                errorMsg += "<br>" + response.errors.join("<br>");
                            }
                            showAlert(errorMsg, 'danger');
                        }
                    },
                    error: function (xhr) {
                        var errorMsg = "An error occurred";
                        try {
                            var jsonResponse = JSON.parse(xhr.responseText);
                            if (jsonResponse && jsonResponse.message) {
                                errorMsg = jsonResponse.message;
                            }
                        } catch (e) {
                            errorMsg = xhr.statusText;
                        }
                        showAlert(errorMsg, 'danger');
                    },
                    complete: function () {
                        submitText.text('Save Changes');
                        spinner.addClass('d-none');
                        submitBtn.prop('disabled', false);
                    }
                });
            });

            // Write Prescription button click: set appointmentId in hidden field and clear form
           $('.write-prescription-btn').click(function () {
                var appointmentId = $(this).data('appointmentid');
                $('#AppointmentId').val(appointmentId);

                // Clear previous form data and alerts
                $('#prescriptionForm')[0].reset();
                $('#dynamicAlerts').html('');
            });
            

            // No AJAX on prescription form submit, so no event handler here

            // Reusable alert function
            function showAlert(message, type) {
                var alertHtml = `
                            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                                ${message}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        `;
                $('#dynamicAlerts').html(alertHtml);

                setTimeout(() => {
                    $('.alert-dismissible').alert('close');
                }, 5000);
            }
        });

        // jQuery to populate modal fields on show
        $('#viewAppointmentModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var modal = $(this);

            modal.find('#modalPatient').text(button.data('patient') || 'N/A');
            modal.find('#modalDate').text(button.data('date') || 'N/A');
            modal.find('#modalDescription').text(button.data('description') || 'N/A');
            modal.find('#modalStatus').text(button.data('status') || 'N/A');
        });


    </script>
}
@functions {
    string GetStatusClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning",
            "Approved" => "bg-success",
            "Completed" => "bg-primary",
            "Cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
